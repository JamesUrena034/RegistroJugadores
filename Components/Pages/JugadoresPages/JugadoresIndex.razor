@page "/Jugadores/Index"
@using RegistroJugadores.Models
@using RegistroJugadores.Services

@inject JugadoresService jugadoresService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Registro de Jugadores</PageTitle>

<div class="container mt-4">
    <div class="card shadow-lg">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="card-title mb-0">Consulta de Jugadores</h5>
            <a href="/Jugadores/Create" class="btn btn-success">
                <i class="bi bi-plus-circle"></i> Crear
            </a>
        </div>

        <div class="card-body">
            <div class="row mb-3">
                <div class="col-3">
                    <label class="form-label"><strong>Filtrar por</strong></label>
                    <InputSelect class="form-select" @bind-Value="Filtro">
                        <option value="" selected disabled>Seleccione</option>
                        <option value="JugadorId">JugadorId</option>
                        <option value="Nombres">Nombres</option>
                    </InputSelect>
                </div>
                <div class="col-6">
                    <label class="form-label"><strong>Búsqueda</strong></label>
                    <div class="input-group">
                        <input class="form-control" @bind="ValorFiltro" placeholder="Buscar" />
                        <button type="button" class="btn btn-primary" @onclick="Buscar">
                            <i class="bi bi-search"></i> Buscar
                        </button>
                    </div>
                </div>
            </div>

            <table class="table table-bordered table-hover table-light">
                <thead>
                    <tr>
                        <th>JugadorId</th>
                        <th>Nombres</th>
                        <th>Victorias</th>
                        <th>Empates</th>
                        <th>Derrotas</th>
                        <th>Editar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var jugador in ListaJugadores)
                    {
                        <tr>
                            <td>@jugador.JugadorId</td>
                            <td>@jugador.Nombres</td>
                            <td>@jugador.Victorias</td>
							<td>@jugador.Empates</td>
							<td>@jugador.Derrotas</td>
                            <td class="text-center">
                                <a href="/Jugadores/Edit/@jugador.JugadorId" class="btn btn-outline-primary btn-sm">
                                    <i class="bi bi-pencil"></i>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="card-footer">
			<label>Cantidad: @ListaJugadores.Count()</label>
		</div>
    </div>
</div>

@code {
    public List<Jugadores> ListaJugadores { get; set; } = new();
    public string Filtro { get; set; } = string.Empty;
    public string ValorFiltro { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        ListaJugadores = await jugadoresService.Listar(j => j.JugadorId > 0);
    }

    private async Task Buscar()
    {
        if (!string.IsNullOrWhiteSpace(ValorFiltro))
        {
            if (Filtro == "JugadorId" && int.TryParse(ValorFiltro, out int id))
                ListaJugadores = await jugadoresService.Listar(j => j.JugadorId == id);
            else if (Filtro == "Nombres")
                ListaJugadores = await jugadoresService.Listar(j => j.Nombres.ToLower().Contains(ValorFiltro.ToLower()));
        }
        else
        {
            ListaJugadores = await jugadoresService.Listar(j => j.JugadorId > 0);
        }
    }
}