@page "/Jugadores/Create"
@using RegistroJugadores.Models
@using RegistroJugadores.Services

@rendermode InteractiveServer
@inject JugadoresService jugadoresService
@inject NavigationManager navigationManager


<PageTitle>Crear Jugador</PageTitle>

<EditForm Model="Jugador" OnValidSubmit="Guardar" FormName="formCrearJugador">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container mt-4">
        <div class="card shadow-lg">
            <div class="card-header text-center">
                <h5 class="card-title">Crear Jugador</h5>
            </div>

            <div class="card-body">
                <div class="mb-3">
                    <label class="form-label"><strong>Nombres</strong></label>
                    <InputText class="form-control" @bind-Value="Jugador.Nombres" />
                    <ValidationMessage For="() => Jugador.Nombres" />
                </div>

                <div class="mb-3">
                    <label class="form-label"><strong>Partidas</strong></label>
                    <InputNumber class="form-control" @bind-Value="Jugador.Partidas" />
                    <ValidationMessage For="() => Jugador.Partidas" />
                </div>
            </div>

            <div class="card-footer text-center mt-2">
                <a href="/Jugadores/Index" class="btn btn-secondary">
                    <i class="bi bi-arrow-left"></i> Volver
                </a>
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-floppy"></i> Guardar
                </button>
            </div>
        </div>
    </div>
</EditForm>

<div class="text-center mt-2 text-danger">@Mensaje</div>

@code {
    public Jugadores Jugador { get; set; } = new Jugadores();
    public string Mensaje { get; set; } = string.Empty;

    public async Task Guardar()
    {
        Mensaje = string.Empty;

        var existeNombre = await jugadoresService.ExisteNombre(Jugador.Nombres);
        if (existeNombre)
        {
            Mensaje = "Ya existe un jugador con este nombre.";
            return;
        }

        var creado = await jugadoresService.Guardar(Jugador);

        if (creado)
        {
            navigationManager.NavigateTo("/Jugadores/Index");
        }
        else
        {
            Mensaje = "No se pudo guardar el jugador.";
        }
    }
}
